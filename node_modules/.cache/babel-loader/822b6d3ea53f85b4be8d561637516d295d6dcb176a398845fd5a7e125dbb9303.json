{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\misho\\\\OneDrive\\\\Desktop\\\\food-order-app\\\\src\\\\Store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useContext, useReducer, useState } from \"react\";\nimport cartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultState = {\n  items: [],\n  totalAmount: 0\n};\nconst amountReducer = function (state, action) {\n  const totalAmount = state.totalAmount + action.val.price * action.val.amount;\n  if (action.type === \"ADD\") {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.val.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + +action.val.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat({\n        id: action.val.id,\n        name: action.val.name,\n        amount: +action.val.amount,\n        price: action.val.price\n      });\n    }\n    return {\n      items: updatedItems,\n      totalAmount: totalAmount\n    };\n  }\n  if (action.type === 'REMOVE') {\n    if (state.value == 1) {\n      const existingCartItemIndex = state.items.findIndex(item => item.id !== action.val.id);\n    }\n    let updatedItems = [];\n  }\n};\nconst CartProvider = function (props) {\n  _s();\n  const addedAmount = useContext(cartContext);\n  const [cartState, dispatchAmount] = useReducer(amountReducer, defaultState);\n  const amountHandler = function (items) {\n    dispatchAmount({\n      type: \"ADD\",\n      val: items\n    });\n  };\n  const decreaseAmountHandler = function (items) {\n    dispatchAmount({\n      type: \"REMOVE\",\n      val: items\n    });\n  };\n  const numberOfCartItems = cartState.items.reduce((curNumber, item) => {\n    return curNumber + +item.amount;\n  }, 0);\n  const contextdefaultState = {\n    totalAmount: cartState.totalAmount,\n    items: cartState.items,\n    addItem: amountHandler,\n    removeItem: decreaseAmountHandler,\n    numberOfCartItems: numberOfCartItems\n  };\n  console.log(addedAmount.addItem);\n  return /*#__PURE__*/_jsxDEV(cartContext.Provider, {\n    value: contextdefaultState,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"wFdYpbgkZe516DA7y0nnU9lyMtg=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useContext","useReducer","useState","cartContext","defaultState","items","totalAmount","amountReducer","state","action","val","price","amount","type","existingCartItemIndex","findIndex","item","id","existingCartItem","updatedItems","updatedItem","concat","name","value","CartProvider","props","addedAmount","cartState","dispatchAmount","amountHandler","decreaseAmountHandler","numberOfCartItems","reduce","curNumber","contextdefaultState","addItem","removeItem","console","log","children"],"sources":["C:/Users/misho/OneDrive/Desktop/food-order-app/src/Store/CartProvider.js"],"sourcesContent":["import { useContext, useReducer, useState } from \"react\";\r\n\r\nimport cartContext from \"./cart-context\";\r\n\r\nconst defaultState = { items: [], totalAmount: 0 };\r\n\r\nconst amountReducer = function (state, action) {\r\n\r\n  const totalAmount =\r\n      state.totalAmount + action.val.price * action.val.amount;\r\n\r\n\r\n  if (action.type === \"ADD\") {\r\n  \r\n\r\n\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.val.id\r\n    );\r\n      \r\n\r\n\r\n\r\n  const existingCartItem = state.items[existingCartItemIndex];\r\n\r\n  let updatedItems;\r\n\r\n\r\n  if (existingCartItem) {\r\n    const updatedItem = {\r\n      ...existingCartItem,\r\n      amount: existingCartItem.amount + +action.val.amount,\r\n    };\r\n   \r\n\r\n    updatedItems = [...state.items];\r\n    updatedItems[existingCartItemIndex] = updatedItem;\r\n   \r\n  } else {\r\n    updatedItems = state.items.concat({\r\n      id: action.val.id,\r\n      name: action.val.name,\r\n      amount: +action.val.amount,\r\n      price: action.val.price,\r\n    });\r\n   \r\n  }\r\n\r\n    return {\r\n      items: updatedItems,\r\n\r\n      totalAmount: totalAmount,\r\n    };\r\n  }\r\n\r\n  if(action.type === 'REMOVE'){\r\n\r\n\r\n    if(state.value == 1){\r\n   const existingCartItemIndex = state.items.findIndex(\r\n     (item) => item.id !== action.val.id\r\n   );}\r\n    let updatedItems = [];\r\n\r\n\r\n\r\n  }\r\n};\r\nconst CartProvider = function (props) {\r\n  const addedAmount = useContext(cartContext);\r\n\r\n  const [cartState, dispatchAmount] = useReducer(amountReducer, defaultState);\r\n\r\n  const amountHandler = function (items) {\r\n    dispatchAmount({ type: \"ADD\", val: items });\r\n  };\r\n\r\n  const decreaseAmountHandler = function (items) {\r\n    dispatchAmount({ type: \"REMOVE\", val: items });\r\n  }\r\n\r\n  const numberOfCartItems = cartState.items.reduce((curNumber, item) => {\r\n    return curNumber + +item.amount;\r\n  }, 0);\r\n\r\n  const contextdefaultState = {\r\n    totalAmount: cartState.totalAmount,\r\n    items: cartState.items,\r\n    addItem: amountHandler,\r\n    removeItem: decreaseAmountHandler,\r\n    numberOfCartItems: numberOfCartItems,\r\n  };\r\n\r\n  console.log(addedAmount.addItem);\r\n  return (\r\n    <cartContext.Provider value={contextdefaultState}>\r\n      {props.children}\r\n    </cartContext.Provider>\r\n  );\r\n};\r\nexport default CartProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}