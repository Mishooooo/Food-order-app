{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\misho\\\\OneDrive\\\\Desktop\\\\food-order-app\\\\src\\\\Store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useContext, useReducer, useState } from \"react\";\nimport cartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultState = {\n  items: [],\n  totalAmount: 0\n};\nconst amountReducer = function (state, action) {\n  const totalAmount = state.totalAmount + action.val.price * action.val.amount;\n  let updatedItems;\n  if (action.type === \"ADD\") {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.val.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + +action.val.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat({\n        id: action.val.id,\n        name: action.val.name,\n        amount: +action.val.amount,\n        price: action.val.price\n      });\n    }\n    return {\n      items: updatedItems,\n      totalAmount: totalAmount\n    };\n  }\n  if (action.type === \"REMOVE\") {\n    //   if (state.value == 1) {\n    //     const existingCartItemIndex = state.items.findIndex(\n    //       (item) => item.id !== action.val.id\n\n    //     );\n    //          updatedItems = [...state.items.slice(existingCartItemIndex, 1)]\n    //   } else { updatedItems = state.items.concat({\n    //       id: action.val.id,\n    //       name: action.val.name,\n    //       amount: +action.val.amount,\n    //       price: action.val.price,\n    //     })}\n    //  return {\n    //    items: updatedItems,\n\n    //    totalAmount: totalAmount,\n    //  };\n    // }\n\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.val.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + +action.val.amount\n      };\n      updatedItems = [...state.items];\n\n      // const existingCartItemIndex = state.items.findIndex(\n      //   (item) => item.id !== action.val.id)\n\n      updatedItems[existingCartItemIndex] = updatedItem;\n      //  updatedItems = state.items.slice(existingCartItemIndex, 1)\n    } else {\n      updatedItems = state.items.concat({\n        id: action.val.id,\n        name: action.val.name,\n        amount: +action.val.amount,\n        price: action.val.price\n      });\n    }\n    return {\n      items: updatedItems,\n      totalAmount: totalAmount\n    };\n  }\n};\nconst CartProvider = function (props) {\n  _s();\n  const addedAmount = useContext(cartContext);\n  const [cartState, dispatchAmount] = useReducer(amountReducer, defaultState);\n  const amountHandler = function (items) {\n    dispatchAmount({\n      type: \"ADD\",\n      val: items\n    });\n  };\n  const decreaseAmountHandler = function (items) {\n    dispatchAmount({\n      type: \"REMOVE\",\n      val: items\n    });\n  };\n  const numberOfCartItems = cartState.items.reduce((curNumber, item) => {\n    return curNumber + +item.amount;\n  }, 0);\n  const contextdefaultState = {\n    totalAmount: cartState.totalAmount,\n    items: cartState.items,\n    addItem: amountHandler,\n    removeItem: decreaseAmountHandler,\n    numberOfCartItems: numberOfCartItems\n  };\n  console.log(addedAmount.addItem);\n  return /*#__PURE__*/_jsxDEV(cartContext.Provider, {\n    value: contextdefaultState,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"wFdYpbgkZe516DA7y0nnU9lyMtg=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useContext","useReducer","useState","cartContext","defaultState","items","totalAmount","amountReducer","state","action","val","price","amount","updatedItems","type","existingCartItemIndex","findIndex","item","id","existingCartItem","updatedItem","concat","name","CartProvider","props","addedAmount","cartState","dispatchAmount","amountHandler","decreaseAmountHandler","numberOfCartItems","reduce","curNumber","contextdefaultState","addItem","removeItem","console","log","children"],"sources":["C:/Users/misho/OneDrive/Desktop/food-order-app/src/Store/CartProvider.js"],"sourcesContent":["import { useContext, useReducer, useState } from \"react\";\r\n\r\nimport cartContext from \"./cart-context\";\r\n\r\nconst defaultState = { items: [], totalAmount: 0 };\r\n\r\nconst amountReducer = function (state, action) {\r\n  const totalAmount = state.totalAmount + action.val.price * action.val.amount;\r\n  let updatedItems;\r\n\r\n  if (action.type === \"ADD\") {\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.val.id\r\n    );\r\n\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n\r\n    if (existingCartItem) {\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + +action.val.amount,\r\n      };\r\n\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = state.items.concat({\r\n        id: action.val.id,\r\n        name: action.val.name,\r\n        amount: +action.val.amount,\r\n        price: action.val.price,\r\n      });\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n\r\n      totalAmount: totalAmount,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"REMOVE\") {\r\n  //   if (state.value == 1) {\r\n  //     const existingCartItemIndex = state.items.findIndex(\r\n  //       (item) => item.id !== action.val.id\r\n   \r\n  //     );\r\n  //          updatedItems = [...state.items.slice(existingCartItemIndex, 1)]\r\n  //   } else { updatedItems = state.items.concat({\r\n  //       id: action.val.id,\r\n  //       name: action.val.name,\r\n  //       amount: +action.val.amount,\r\n  //       price: action.val.price,\r\n  //     })}\r\n  //  return {\r\n  //    items: updatedItems,\r\n\r\n  //    totalAmount: totalAmount,\r\n  //  };\r\n  // }\r\n\r\n\r\n      const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.val.id\r\n    );\r\n\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n\r\n\r\n\r\n    if (existingCartItem) {\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + +action.val.amount,\r\n      };\r\n      \r\n       updatedItems = [...state.items];\r\n\r\n\r\n\r\n\r\n\r\n      // const existingCartItemIndex = state.items.findIndex(\r\n      //   (item) => item.id !== action.val.id)\r\n\r\n\r\n     \r\n       updatedItems[existingCartItemIndex] = updatedItem;\r\n        //  updatedItems = state.items.slice(existingCartItemIndex, 1)\r\n\r\n      \r\n    } else {\r\n      updatedItems = state.items.concat({\r\n        id: action.val.id,\r\n        name: action.val.name,\r\n        amount: +action.val.amount,\r\n        price: action.val.price,\r\n      });\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n\r\n      totalAmount: totalAmount,\r\n    };\r\n  }\r\n};\r\nconst CartProvider = function (props) {\r\n  const addedAmount = useContext(cartContext);\r\n\r\n  const [cartState, dispatchAmount] = useReducer(amountReducer, defaultState);\r\n\r\n  const amountHandler = function (items) {\r\n    dispatchAmount({ type: \"ADD\", val: items });\r\n  };\r\n\r\n  const decreaseAmountHandler = function (items) {\r\n    dispatchAmount({ type: \"REMOVE\", val: items });\r\n  };\r\n\r\n  const numberOfCartItems = cartState.items.reduce((curNumber, item) => {\r\n    return curNumber + +item.amount;\r\n  }, 0);\r\n\r\n  const contextdefaultState = {\r\n    totalAmount: cartState.totalAmount,\r\n    items: cartState.items,\r\n    addItem: amountHandler,\r\n    removeItem: decreaseAmountHandler,\r\n    numberOfCartItems: numberOfCartItems,\r\n  };\r\n\r\n  console.log(addedAmount.addItem);\r\n  return (\r\n    <cartContext.Provider value={contextdefaultState}>\r\n      {props.children}\r\n    </cartContext.Provider>\r\n  );\r\n};\r\nexport default CartProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}